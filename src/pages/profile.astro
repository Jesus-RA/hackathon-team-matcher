---
import Layout from '@/layouts/Layout.astro';
import ProfileForm from '@/components/profile/ProfileForm.vue';

import { userProfileExists, getUserProfileData } from '@/lib/user_profile.js';
import { fetchUserProfile, getUserTechnologiesBasedOnRepos } from '@/lib/github.js';

const user = await Astro.locals.currentUser();

if(!user) {
    Astro.redirect('/sign-in');
    return;
}

const profileData = {
    clerk_user_id: user.id,
    name: user?.fullName ?? '',
    github_username: user.username ?? '',
    email: user?.emailAddresses?.[0]?.emailAddress ?? '',
    portfolio: '',
    bio: '',
    technologies: [],
    data_fetched_from_github: false,
};

const userProfileExistsInDB = await userProfileExists(user.id);
if(!userProfileExistsInDB && profileData.github_username){ // If user profile does not exist in DB and user logged in through GitHub, fetch it from github (logged in for the first time)
    profileData.data_fetched_from_github = true;

    const [profile, technologies] = await Promise.all([
        fetchUserProfile(profileData.github_username),
        getUserTechnologiesBasedOnRepos(profileData.github_username)
    ]);

    profileData.portfolio = profile?.blog;
    profileData.bio = profile?.bio;
    profileData.technologies = technologies;
} else {
    // If user profile exists in DB, get it from DB
    const profile = await getUserProfileData(user.id);

    Object.entries(profile).forEach(([key, value]) => {
        if(value){
            profileData[key] = value;
        }
    });
}

---

<Layout title="Profile">
    <ProfileForm client:load profile={profileData}/>
</Layout>